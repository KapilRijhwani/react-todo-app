{"version":3,"sources":["components/Todo.js","components/Todos.js","components/Header.js","components/AddTodo.js","components/pages/About.js","App.js","index.js"],"names":["TodoItem","state","getTitleStyle","backgroundColor","padding","borderBottom","textDecoration","props","todo","completed","closeBtnStyle","background","color","border","borderRadius","cursor","float","this","id","title","style","type","onChange","onToggleCheckbox","onClick","onDelete","Component","Todos","todos","map","Todo","key","Header","linkStyle","textAlign","to","AddTodo","e","setState","target","name","value","onSubmit","preventDefault","addTodo","display","placeholder","flex","className","About","Fragment","App","newTodo","uuid","v4","toggleTodoItem","deleteTodoItem","filter","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.76d04e71.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TodoItem extends Component {\n  state = {};\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n      <div style={this.getTitleStyle()}>\n        <p>\n          <input\n            type=\"checkbox\"\n            onChange={() => this.props.onToggleCheckbox(id)}\n          />\n          {title}\n          <button\n            style={this.closeBtnStyle}\n            onClick={() => this.props.onDelete(id)}\n          >\n            X\n          </button>\n        </p>\n      </div>\n    );\n  }\n\n  getTitleStyle = () => {\n    return {\n      backgroundColor: \"#f4f4f4\",\n      padding: \"10px\",\n      borderBottom: \"2px #ccc dotted\",\n      textDecoration: this.props.todo.completed ? \"line-through\" : \"none\"\n    };\n  };\n\n  closeBtnStyle = {\n    background: \"#ff0000\",\n    color: \"#fff\",\n    border: \"none\",\n    padding: \"5px 10px\",\n    borderRadius: \"50%\",\n    cursor: \"pointer\",\n    float: \"right\"\n  };\n}\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\n\nexport default TodoItem;\n","import React, { Component } from \"react\";\nimport TodoItem from \"./Todo\";\nimport PropTypes from \"prop-types\";\n\nclass Todos extends Component {\n  state = {};\n  render() {\n    return (\n      <div>\n        {this.props.todos.map(todo => (\n          <TodoItem\n            key={todo.id}\n            todo={todo}\n            onToggleCheckbox={this.props.onToggleCheckbox}\n            onDelete={this.props.onDelete}\n          />\n        ))}\n      </div>\n    );\n  }\n}\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired\n};\n\nexport default Todos;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => {\n  const headerStyle = {\n    background: \"#333\",\n    color: \"#fff\",\n    textAlign: \"center\",\n    padding: \"10px\"\n  };\n\n  const linkStyle = {\n    color: \"#fff\",\n    textDecoration: \"none\"\n  };\n\n  return (\n    <header style={headerStyle}>\n      <h1>Todo List</h1>\n      <Link style={linkStyle} to=\"/\">\n        Home\n      </Link>{\" \"}\n      |{\" \"}\n      <Link style={linkStyle} to=\"/about\">\n        About\n      </Link>\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass AddTodo extends Component {\n  state = {\n    title: \"\"\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onSubmit} style={{ display: \"flex\" }}>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Add Todo...\"\n            style={{ flex: \"10\", padding: \"5px\" }}\n            value={this.state.title}\n            onChange={this.onChange}\n          />\n\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            className=\"btn\"\n            style={{\n              flex: \"1\",\n              display: \"inline-block\",\n              border: \"none\",\n              background: \"#555\",\n              color: \"#fff\",\n              padding: \"7px 20px\",\n              cursor: \"pointer\"\n            }}\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddTodo;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <React.Fragment>\n      <h1>About</h1>\n      <p>This is React Todo App v1.0. Learning React by KapilRijhwani.</p>\n    </React.Fragment>\n  );\n}\n","import React, { Component } from \"react\";\nimport Todos from \"./components/Todos\";\nimport Header from \"./components/Header\";\nimport AddTodo from \"./components/AddTodo\";\nimport uuid from \"uuid\";\nimport About from \"./components/pages/About\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    todos: [\n      {\n        id: 1,\n        title: \"Todo 1\",\n        completed: false\n      },\n      {\n        id: 2,\n        title: \"Todo 2\",\n        completed: false\n      },\n      {\n        id: 3,\n        title: \"Todo 3\",\n        completed: false\n      }\n    ]\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    onToggleCheckbox={this.toggleTodoItem}\n                    onDelete={this.deleteTodoItem}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n\n  addTodo = title => {\n    const newTodo = {\n      id: uuid.v4(),\n      title,\n      completed: false\n    };\n    this.setState({ todos: [...this.state.todos, newTodo] });\n  };\n\n  toggleTodoItem = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    });\n  };\n\n  deleteTodoItem = id => {\n    this.setState({\n      todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    });\n  };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}